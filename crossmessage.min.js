/* global define, module */
/*!
 * crossmessage.js  ·  Cross-Domain Window Reliable Message Delivery
 * @Author: Liu Xihang <mateboy@foxmail.com>
 * @Description: Enterprise-grade cross-domain window communication library with reliable message delivery guarantee
 */
!function(e,n){"function"==typeof define&&define.amd?define([],n):"object"==typeof module&&module.exports?module.exports=n():e.CrossMessage=n()}("undefined"!=typeof self?self:this,function(){"use strict";const e="CROSSMESSAGE_MSG",n="CROSSMESSAGE_ACK",t=new Map,o=new Map;function r(){return Math.random().toString(36).slice(2)}function i(e){if("undefined"==typeof window)return{safe:!0};const n=window.location.protocol,t=e.split(":")[0]+":";return"https:"===n&&"http:"===t?{safe:!1,reason:"HTTPS页面不能向HTTP页面发送postMessage（混合内容安全策略）。解决方案：将目标页面升级为HTTPS，或在HTTP环境下使用此库"}:{safe:!0}}function s(e,n,t,o,r,i,s){try{e.postMessage({type:t,key:o,payload:r,expectAck:i,id:s},n)}catch(e){}}function a(a,c,d){if(t.has(a))return Promise.reject(new Error(`[CrossMessage] key="${a}" 的发送任务已存在`));const{interval:w=1e3,timeout:u=5e3,targetWindow:f,targetWindowName:l,targetOrigin:p="*"}=d||{};let g=f;if(!g&&"undefined"!=typeof window){if("string"==typeof l&&l.trim())try{const e=window.open("",l.trim());if(e&&e!==window)try{"about:blank"===e.location.href&&""===e.document.title&&!e.document.body?.hasChildNodes()?e.close():e.closed||(g=e)}catch(n){e.closed||(g=e)}}catch(e){}g||!window.opener&&!window.parent||(g=window.opener||window.parent)}if(!g)return Promise.reject(new Error("[CrossMessage] 未能解析 targetWindow。请传入 targetWindow 或 targetWindowName，并确保接收端已设置 window.name。"));if("*"!==p){const e=i(p);if(!e.safe)return Promise.reject(new Error(`[CrossMessage] ${e.reason}`))}return new Promise((i,d)=>{let f,l,m=!0;function y(){clearInterval(f),clearTimeout(l),window.removeEventListener("message",v),t.delete(a),o.delete(a),m=!1}function v(e){const t=e.data;m&&t&&t.type===n&&t.key===a&&e.source===g&&("*"!==p&&e.origin!==p||(i({key:a}),y()))}window.addEventListener("message",v),l=setTimeout(()=>{y(),d(new Error(`[CrossMessage] key="${a}" 等待回执超时（${u}ms）`))},u),f=setInterval(()=>{if(function(e){try{return e&&e.closed}catch(e){return!1}}(g))return y(),void d(new Error(`[CrossMessage] key="${a}" 目标窗口已关闭`));s(g,p,e,a,c,!0,r())},w),s(g,p,e,a,c,!0,r()),t.set(a,{stop:y,resolve:i,reject:d})})}return{sendUntilAck:a,receiveOnce:function(r,i){if(o.has(r))return o.get(r).promise;const{allowedOrigins:s=["*"],expectedSourceWindow:a,name:c}=i||{};try{if("undefined"!=typeof window&&null!=c){let e,n=!1;"string"==typeof c?e=c.trim():c&&"object"==typeof c&&("string"==typeof c.value&&(e=c.value.trim()),!0===c.deep&&(n=!0)),e&&(n?window.name=e:window.name?window.name!==e&&console.warn(`[CrossMessage] 当前页已存在 window.name="${window.name}"，未覆盖为 "${e}"。如需强制，请传 { name: { value: "${e}", deep: true } }`):window.name=e)}}catch(e){}let d,w;const u=new Promise((e,n)=>{d=e,w=n});return o.set(r,{promise:u,resolve:d,reject:w,received:!1}),window.addEventListener("message",function i(c){const d=c.data;if(!d||d.type!==e||d.key!==r)return;if(a&&c.source!==a)return;if(!(s.includes("*")||s.includes(c.origin)))return;const w=o.get(r);if(w&&!w.received){w.received=!0,w.resolve(d.payload);try{c.source&&"function"==typeof c.source.postMessage&&c.source.postMessage({type:n,key:r,payload:void 0,expectAck:!1,id:d.id},c.origin||"*")}catch(e){}window.removeEventListener("message",i),o.delete(r),t.delete(r)}}),u},openAndSend:function(e,n,t,o){const{windowFeatures:r,...s}=o||{},c="string"==typeof e?e.trim():e;if(!c)return Promise.reject(new Error("[CrossMessage] URL 不能为空"));let d=function(e){try{return new URL(e).origin}catch(n){try{if("undefined"!=typeof window&&window.location)return new URL(e,window.location.href).origin}catch(e){}return null}}(c);if(d||(console.warn(`[CrossMessage] 无法从 URL "${c}" 提取 origin，回退到 '*'`),d="*"),"*"!==d){const e=i(d);if(!e.safe)return Promise.reject(new Error(`[CrossMessage] ${e.reason}`))}const w=window.open(c,"_blank",r);if(!w){const e="[CrossMessage] 无法打开目标窗口，可能的原因：\n  1. 浏览器弹窗拦截器阻止了窗口打开\n  2. 当前调用不在用户交互事件中（如点击事件）\n  3. 浏览器达到窗口数量限制\n  建议：在用户点击等交互事件中调用此函数";return Promise.reject(new Error(e))}return a(n,t,{...s,targetWindow:w,targetOrigin:d})}}});