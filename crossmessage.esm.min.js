/*!
 * crossmessage.esm.js  ·  Cross-Domain Window Reliable Message Delivery (ES Module)
 * @Author: Liu Xihang <mateboy@foxmail.com>
 * @Description: Enterprise-grade cross-domain window communication library with reliable message delivery guarantee
 *  Sender: sendUntilAck(key, payload, opts)  -> Promise
 *    Success: resolve({key})   Failure: reject(Error('timeout'))
 *  Receiver: receiveOnce(key)  -> Promise<payload>
 *  Utility API: openAndSend(url, key, payload, opts)  -> Promise
 */
const MSG_TYPE="CROSSMESSAGE_MSG",ACK_TYPE="CROSSMESSAGE_ACK",senders=new Map,receivers=new Map;function uid(){return Math.random().toString(36).slice(2)}function extractOrigin(e){try{return new URL(e).origin}catch(n){try{if("undefined"!=typeof window&&window.location)return new URL(e,window.location.href).origin}catch(e){}return null}}function checkMixedContent(e){if("undefined"==typeof window)return{safe:!0};const n=window.location.protocol,r=e.split(":")[0]+":";return"https:"===n&&"http:"===r?{safe:!1,reason:"HTTPS页面不能向HTTP页面发送postMessage（混合内容安全策略）。解决方案：将目标页面升级为HTTPS，或在HTTP环境下使用此库"}:{safe:!0}}function isWindowClosed(e){try{return e&&e.closed}catch(e){return!1}}function post(e,n,r,t,o,i,s){try{e.postMessage({type:r,key:t,payload:o,expectAck:i,id:s},n)}catch(e){}}function sendUntilAck(e,n,r){if(senders.has(e))return Promise.reject(new Error(`[CrossMessage] key="${e}" 的发送任务已存在`));const{interval:t=1e3,timeout:o=5e3,targetWindow:i,targetWindowName:s,targetOrigin:c="*"}=r||{};let d=i;if(!d&&"undefined"!=typeof window){if("string"==typeof s&&s.trim())try{const e=window.open("",s.trim());if(e&&e!==window)try{"about:blank"===e.location.href&&""===e.document.title&&!e.document.body?.hasChildNodes()?e.close():e.closed||(d=e)}catch(n){e.closed||(d=e)}}catch(e){}d||!window.opener&&!window.parent||(d=window.opener||window.parent)}if(!d)return Promise.reject(new Error("[CrossMessage] 未能解析 targetWindow。请传入 targetWindow 或 targetWindowName，并确保接收端已设置 window.name。"));if("*"!==c){const e=checkMixedContent(c);if(!e.safe)return Promise.reject(new Error(`[CrossMessage] ${e.reason}`))}return new Promise((r,i)=>{let s,a,w=!0;function u(){clearInterval(s),clearTimeout(a),window.removeEventListener("message",l),senders.delete(e),receivers.delete(e),w=!1}function l(n){const t=n.data;w&&t&&t.type===ACK_TYPE&&t.key===e&&n.source===d&&("*"!==c&&n.origin!==c||(r({key:e}),u()))}window.addEventListener("message",l),a=setTimeout(()=>{u(),i(new Error(`[CrossMessage] key="${e}" 等待回执超时（${o}ms）`))},o),s=setInterval(()=>{if(isWindowClosed(d))return u(),void i(new Error(`[CrossMessage] key="${e}" 目标窗口已关闭`));post(d,c,MSG_TYPE,e,n,!0,uid())},t),post(d,c,MSG_TYPE,e,n,!0,uid()),senders.set(e,{stop:u,resolve:r,reject:i})})}function receiveOnce(e,n){if(receivers.has(e))return receivers.get(e).promise;const{allowedOrigins:r=["*"],expectedSourceWindow:t,name:o}=n||{};try{if("undefined"!=typeof window&&null!=o){let e,n=!1;"string"==typeof o?e=o.trim():o&&"object"==typeof o&&("string"==typeof o.value&&(e=o.value.trim()),!0===o.deep&&(n=!0)),e&&(n?window.name=e:window.name?window.name!==e&&console.warn(`[CrossMessage] 当前页已存在 window.name="${window.name}"，未覆盖为 "${e}"。如需强制，请传 { name: { value: "${e}", deep: true } }`):window.name=e)}}catch(e){}let i,s;const c=new Promise((e,n)=>{i=e,s=n});return receivers.set(e,{promise:c,resolve:i,reject:s,received:!1}),window.addEventListener("message",function n(o){const i=o.data;if(!i||i.type!==MSG_TYPE||i.key!==e)return;if(t&&o.source!==t)return;if(!(r.includes("*")||r.includes(o.origin)))return;const s=receivers.get(e);if(s&&!s.received){s.received=!0,s.resolve(i.payload);try{o.source&&"function"==typeof o.source.postMessage&&o.source.postMessage({type:ACK_TYPE,key:e,payload:void 0,expectAck:!1,id:i.id},o.origin||"*")}catch(e){}window.removeEventListener("message",n),receivers.delete(e),senders.delete(e)}}),c}function openAndSend(e,n,r,t){const{windowFeatures:o,...i}=t||{},s="string"==typeof e?e.trim():e;if(!s)return Promise.reject(new Error("[CrossMessage] URL 不能为空"));let c=extractOrigin(s);if(c||(console.warn(`[CrossMessage] 无法从 URL "${s}" 提取 origin，回退到 '*'`),c="*"),"*"!==c){const e=checkMixedContent(c);if(!e.safe)return Promise.reject(new Error(`[CrossMessage] ${e.reason}`))}const d=window.open(s,"_blank",o);if(!d){const e="[CrossMessage] 无法打开目标窗口，可能的原因：\n1. 浏览器弹窗拦截器阻止了窗口打开\n2. 当前调用不在用户交互事件中（如点击事件）\n3. 浏览器达到窗口数量限制\n建议：在用户点击等交互事件中调用此函数";return Promise.reject(new Error(e))}return sendUntilAck(n,r,{...i,targetWindow:d,targetOrigin:c})}export{sendUntilAck,receiveOnce,openAndSend};export default{sendUntilAck:sendUntilAck,receiveOnce:receiveOnce,openAndSend:openAndSend};